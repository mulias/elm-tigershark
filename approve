#!/usr/bin/env bash

set -o errexit

projectRoot=`pwd`
expectSuccessTests=$projectRoot/tests-approval/expectSuccess
expectErrorTests=$projectRoot/tests-approval/expectError
binary=$projectRoot/bin/tigershark



echo "\

================
Building project
================
"
yarn build



echo "\

=====================
Running success cases
=====================
"
cd $expectSuccessTests
for testFolder in *; do
  echo "Running generator with '$testFolder' folder"
  cd $testFolder
  BINARY=$binary ./generate-interop
  cd - > /dev/null
done



echo "\

====================================
Type checking generated declarations
====================================
"
cd $projectRoot
declarationFiles=$(find $expectSuccessTests -type f -name "*.d.ts")
yarn tsc $declarationFiles --out /dev/null || \
  (echo -e "\nFAILURE: a generated declaration file failed to type check." && exit 1)



echo "\

======================================
Confirming generated code is unchanged
======================================
"
git diff --exit-code -- './tests-approval/**/*.d.ts' || \
  (echo -e "\nFAILURE: examples code has changed. Commit changes to approve." && exit 1)
echo -e "Output unchanged"



echo "\

===================
Running error cases
===================
"
cd $expectErrorTests
for testFolder in *; do
  echo "Running generator with $testFolder folder"
  cd $testFolder
  BINARY=$binary ./generate-interop &> output.txt && \
    (echo -e "Expected $testFolder to have non-zero exit code but it succeeded."; exit 1)
  cd - > /dev/null
done



echo "\

============================================
Confirming that error messages are unchanged
============================================
"
git diff --exit-code -- './**/output.txt' || \
  (echo -e "\nFAILURE: error message output has changed. Commit changes to approve." && exit 1)
echo -e "Output unchanged"


echo -e "\n\nAPPROVAL TEST SUITE SUCCESS"
