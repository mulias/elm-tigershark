module TypeScript.DeclarationFile exposing (DeclarationFile, write)

import String.Interpolate exposing (interpolate)
import TypeScript.Writer as Writer


{-| All of the formatted strings needed to build a declaration file. While
these parts of the declaration file are internally formatted, contextual
formatting such as indentation and ending semi-colons has not been applied.
-}
type alias DeclarationFile =
    { moduleName : String
    , docs : Maybe String
    , flags : Maybe String
    , ports : List { name : String, body : String }
    }


{-| Construct the full declaration file.
-}
write : DeclarationFile -> String
write { moduleName, docs, flags, ports } =
    Writer.file
        [ Writer.autoGeneratedFileWarning
        , Writer.newline
        , Writer.namespace
            { docs = Nothing, export = True, name = "Elm" }
            [ Writer.namespace
                { docs = docs, export = False, name = moduleName }
                [ Writer.interface
                    { export = True, name = "App" }
                    [ Writer.ports ports ]
                , Writer.initFn { moduleName = moduleName, flags = flags }
                ]
            ]
        ]
        |> Writer.toString
